<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.study.member.MemberMapper">

	<!-- 회원 정보 읽기 및 수정-->
	<select id="read" parameterType="String"
		resultType="com.study.user.UserDTO">
		select * from User
		where username = #{username}
	</select>
	
	<update id="update" parameterType="com.study.user.UserDTO">
		update User
		
		set user_image = #{user_image}

		where user_no = #{user_no}
	</update>

	<!-- 작성 글 갯수 -->
	<select id="ptotal" parameterType="Map" resultType="int">
		select count(*) from Board
		<where>
			<choose>
				<when test="col=='username'">
					username like concat('%', #{word} ,'%')
				</when>
				<when test="col=='nation'">
					nation like concat('%', #{word} ,'%')
				</when>
			</choose>
		and user_no = #{user_no}
		</where>
	</select>

	<!-- 로그인한 유저의 친구 목록 및 삭제 -->
	<resultMap type="com.study.member.friendDTO" id="friend">
			<result property="f_no" column="f_no" />
			<result property="user_no" column="user_no" />
			<result property="friends_no" column="friends_no" />
			<collection property="list" ofType="com.study.member.userDTO" javaType="List" column="list" resultMap="user" />
	</resultMap>
	<resultMap type="com.study.user.UserDTO" id="user">
			<result property="username" column="username" />
			<result property="email" column="email" />
			<result property="createDate" column="createDate" />
			<result property="user_no" column="user_no" />
			<result property="nation" column="nation" />
			<result property="user_image" column="user_image" />
	</resultMap>
	<select id="list" parameterType="Map" resultMap="friend">
	
		select u.user_no, u.username, u.nation, u.email, u.user_image ,u.createDate, f_no, f.friends_no from friend f
		 inner join user u
		 on u.user_no = f.friends_no
		 where f.user_no = #{user_no};
		 
	</select>

	<delete id="delete" parameterType="int">
		delete from friend
		where f_no = #{f_no}
	</delete>

	<!-- 친구 요청 리스트 -->
	<resultMap type="com.study.user.UserDTO" id="req">
			<result property="username" column="username" />
			<result property="email" column="email" />
			<result property="createDate" column="createDate" />
			<result property="user_no" column="user_no" />
			<result property="nation" column="nation" />
			<result property="user_image" column="user_image" />
		<collection property="rlist" ofType="com.study.member.requestDTO" javaType="List" column="rlist" resultMap="requestlist" />
	</resultMap>
	<resultMap type="com.study.member.requestDTO" id="requestlist">
			<result property="request_no" column="request_no" />
			<result property="f_id" column="f_id" />
			<result property="t_id" column="t_id" />
	</resultMap>
	<select id="rlist" parameterType="Map" resultMap="req"> <!-- 친구요청리스트 -->
		select * from requestfriend r
		 inner join user u
		 on u.user_no = r.f_id
		 where r.t_id = #{t_id}
		order by u.username ASC
	</select>
	
	<delete id="rdelete" parameterType="int">
		delete from requestfriend
		where request_no = #{request_no}
	</delete>
	
	<insert id="reqFriend" parameterType="map">
		insert into requestfriend(user_no, f_id, t_id)
		values (#{f_id}, #{f_id}, #{t_id})
	</insert>
	
	
	<!-- rdelete : 친구요청리스트 삭제, add : 친구 추가 -->
	
	<insert id="add" parameterType="map">
		insert into friend(user_no, friends_no)
		values (#{t_id}, #{f_id}), (#{f_id}, #{t_id})
	</insert>
	
	<!-- 작성글 관련 -->
	<select id="plist" parameterType="Map" resultType="com.study.board.BoardDTO">
		select * from Board
		<where>
			<choose>
				<when test="col=='title'">
					title like concat('%', #{word} ,'%')
				</when>
				<when test="col=='content'">
					content like concat('%', #{word} ,'%')
				</when>
				<when test="col=='title_content'">
					title like CONCAT('%',#{word},'%')
					or
					content like CONCAT('%',#{word},'%')
				</when>
			</choose>
		and user_no = #{user_no}
		</where>
		ORDER BY board_no DESC
		limit #{sno}, #{eno}
	</select>
	
	<!-- 댓글관련 -->
	
	<!-- 작성 댓글 갯수 -->
	<select id="ctotal" parameterType="Map" resultType="int">
		select count(*) from reply
		<where>
			<choose>
				<when test="col=='username'">
					username like concat('%', #{word} ,'%')
				</when>
				<when test="col=='nation'">
					nation like concat('%', #{word} ,'%')
				</when>
			</choose>
		and user_no = #{user_no}
		</where>
	</select>
	
	<resultMap type="com.study.board.BoardDTO" id="boardDTO">
		<result property="username" column="username" />
		<result property="nation" column="nation" />
		<result property="weather_category" column="weather_category" />
		<result property="recommend_category" column="recommend_category" />
		<result property="info_category" column="info_category" />
		<result property="board_no" column="board_no" />
	</resultMap>
	<select id="replylist" parameterType="Map" resultMap="boardDTO">
		select b.username, b.nation, b.weather_category, b.recommend_category, b.info_category, b.board_no, r.reply_no, r.content, r.create_date 
		from Reply r join Board b on r.board_no = b.board_no
		<where>
			<choose>
				<when test="col=='category'">
					weather_category like concat('%', #{word} ,'%')
				</when>
				
				<when test="col=='content'">
					r.content like concat('%', #{word} ,'%')
				</when>
			</choose>
			and r.user_no = #{user_no}
		</where>
		ORDER BY r.reply_no DESC
		limit #{sno}, #{eno}
	</select>
	
	<!-- 스크랩 관련 -->
	<select id="stotal" parameterType="Map" resultType="int">
		select count(*) from Scrap s join board b
		<where>
			<choose>
				<when test="col=='username'">
					b.username like concat('%', #{word} ,'%')
				</when>
				<when test="col=='nation'">
					b.nation like concat('%', #{word} ,'%')
				</when>
			</choose>
			and s.user_no = #{user_no}
		</where>
	</select>
	
	<resultMap type="com.study.board.BoardDTO" id="boardDTO2">
		<result property="username" column="username" />
		<result property="nation" column="nation" />
		<result property="weather_category" column="weather_category" />
		<result property="recommend_category" column="recommend_category" />
		<result property="info_category" column="info_category" />
		<result property="title" column="title" />
		<result property="create_date" column="create_date" />
		
	</resultMap>
	<select id="scraplist" parameterType="Map" resultMap="boardDTO2">
		select b.weather_category, b.recommend_category, b.info_category, b.username, b.title, b.nation, b.create_date , b.board_no, s.scrapno, s.board_no
		from board b join Scrap s
		<where>
			<choose>
			
				<when test="col=='title'">
					title like concat('%', #{word} ,'%')
				</when>
				<when test="col=='content'">
					content like concat('%', #{word} ,'%')
				</when>
				<when test="col=='title_content'">
					title like CONCAT('%',#{word},'%')
					or
					content like CONCAT('%',#{word},'%')
				</when>
			</choose>
			and (s.user_no = 1) and (s.board_no = b.board_no)
		</where>
		ORDER BY s.scrapno DESC
		limit #{sno}, #{eno}
	</select>
	
	<delete id="ScrapDelete" parameterType="int">
		delete from Scrap
		where scrapno = #{scrapno}
	</delete>
	
	<insert id="scrap" parameterType="map">
		insert into Scrap(user_no, board_no)
		values(#{user_no}, #{board_no})
	</insert>
	
	<!-- 친구요청, 친구리스트 확인 -->
	<select id="checkfriend" parameterType="Map" resultType="Integer">
		select count(*) from friend where user_no = #{f_id} and friends_no = #{t_id};
	</select>
	
	<select id="checkReqfriend" parameterType="Map" resultType="Integer">
		select count(*) from requestfriend
		where f_id = #{f_id} and t_id = #{t_id} 
	</select>
	
	<!-- 양쪽 모두 친구요청을 했으면 자동으로 친구 추가할 수 있게 조회// 삭제도 함께 -->
	<select id="checkboth" parameterType="Map" resultType="Integer">
		select count(*) from requestfriend 
		where (user_no = #{f_id} and t_id = #{t_id}) 
		or (user_no = #{t_id} and t_id = #{f_id});
	</select>
	
	<delete id = "reqBothDelete" parameterType="int">
		delete from requestfriend 
		where (f_id = #{f_id} and t_id = #{t_id}) or (f_id = #{t_id} and t_id = #{f_id});
	</delete>
</mapper>